// VOSS AUTOGENERATED FILE, DO NOT MODIFY.

import {
  Builder,
  ChangeNotifier,
  DeserializeFn,
  EnumCase,
  IChangeNotifier,
  Reader,
  Struct
} from './runtime';
type UUID = string;

export interface Person$Data {
  name: string,
}

export class Person implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 8;
  constructor(private data: Person$Data) {}

  getName() {
    return this.data.name;
  }

  setName(value: string): Person {
    return new Person({...this.data, name: value});
  }

  serialize(builder: Builder) {
    builder.str(0, this.data.name);
  }

  static deserialize(reader: Reader) {
    return new Person({
        name: reader.str(0),
    });
  }
}

export interface Point3D$Data {
  x: number,
  y: number,
  z: number,
}

export class Point3D implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 24;
  constructor(private data: Point3D$Data) {}

  getX() {
    return this.data.x;
  }

  setX(value: number): Point3D {
    return new Point3D({...this.data, x: value});
  }

  getY() {
    return this.data.y;
  }

  setY(value: number): Point3D {
    return new Point3D({...this.data, y: value});
  }

  getZ() {
    return this.data.z;
  }

  setZ(value: number): Point3D {
    return new Point3D({...this.data, z: value});
  }

  serialize(builder: Builder) {
    builder.f64(0, this.data.x);
    builder.f64(8, this.data.y);
    builder.f64(16, this.data.z);
  }

  static deserialize(reader: Reader) {
    return new Point3D({
        x: reader.f64(0),
        y: reader.f64(8),
        z: reader.f64(16),
    });
  }
}

export interface Point2D$Data {
  x: number,
  y: number,
}

export class Point2D implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 16;
  constructor(private data: Point2D$Data) {}

  getX() {
    return this.data.x;
  }

  setX(value: number): Point2D {
    return new Point2D({...this.data, x: value});
  }

  getY() {
    return this.data.y;
  }

  setY(value: number): Point2D {
    return new Point2D({...this.data, y: value});
  }

  serialize(builder: Builder) {
    builder.f64(0, this.data.x);
    builder.f64(8, this.data.y);
  }

  static deserialize(reader: Reader) {
    return new Point2D({
        x: reader.f64(0),
        y: reader.f64(8),
    });
  }
}

export interface _ClockData$Data {
  timestamp: number,
}

export class _ClockData implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 8;
  constructor(private data: _ClockData$Data) {}

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ClockData {
    return new _ClockData({...this.data, timestamp: value});
  }

  serialize(builder: Builder) {
    builder.f64(0, this.data.timestamp);
  }

  static deserialize(reader: Reader) {
    return new _ClockData({
        timestamp: reader.f64(0),
    });
  }
}

export interface _ReplyData$Data {
  replyId: number,
}

export class _ReplyData implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 4;
  constructor(private data: _ReplyData$Data) {}

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ReplyData {
    return new _ReplyData({...this.data, replyId: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
  }

  static deserialize(reader: Reader) {
    return new _ReplyData({
        replyId: reader.u32(0),
    });
  }
}

export const enum Point$Type {
  Point2D = 0,
  Point3D = 1,
}

export type Point =
  | EnumCase<Point$Type.Point2D, Point2D>
  | EnumCase<Point$Type.Point3D, Point3D>
  ;

export const Point$DeserializerMap: Record<Point$Type, DeserializeFn<any>> = {
  [Point$Type.Point2D]: Point2D.deserialize,
  [Point$Type.Point3D]: Point3D.deserialize,
}

export const enum _RPCMessage$Type {
  Clock = 0,
  Reply = 1,
}

export type _RPCMessage =
  | EnumCase<_RPCMessage$Type.Clock, _ClockData>
  | EnumCase<_RPCMessage$Type.Reply, _ReplyData>
  ;

export const _RPCMessage$DeserializerMap: Record<_RPCMessage$Type, DeserializeFn<any>> = {
  [_RPCMessage$Type.Clock]: _ClockData.deserialize,
  [_RPCMessage$Type.Reply]: _ReplyData.deserialize,
}
