// VOSS AUTOGENERATED FILE, DO NOT MODIFY.

import {
  Builder,
  ChangeNotifier,
  DeserializeFn,
  EnumCase,
  IChangeNotifier,
  Reader,
  Struct,
  VossSessionBase,
} from './runtime';

type UUID = string;

export interface FieldTypePrimitive$Data {
  provider: string,
}

export class FieldTypePrimitive implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 8;

  constructor(private data: FieldTypePrimitive$Data) {
  }

  getProvider() {
    return this.data.provider;
  }

  setProvider(value: string): FieldTypePrimitive {
    return new FieldTypePrimitive({...this.data, provider: value});
  }

  serialize(builder: Builder) {
    builder.str(0, this.data.provider);
  }

  static deserialize(reader: Reader) {
    return new FieldTypePrimitive({
        provider: reader.str(0),
    });
  }
}

export interface TypespaceObject$Data {
  uuid: UUID,
  title: string,
  x: number,
  y: number,
}

export class TypespaceObject extends IChangeNotifier implements Struct, ChangeNotifier {
  readonly maxElementAlignment = 4;
  readonly size = 32;

  constructor(private data: TypespaceObject$Data) {
    super();
  }

  getUuid() {
    return this.data.uuid;
  }

  getTitle() {
    return this.data.title;
  }

  setTitle(session: VossSession, value: string): Promise<void> {
    this.data.title = value;
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectSetTitle,

      value: new _ObjectTypespaceObjectSetTitleRequest({
        replyId,
        timestamp,
        previousValue: this.data.title,
        newValue: value,
      })
    }));
  }

  getX() {
    return this.data.x;
  }

  setX(session: VossSession, value: number): Promise<void> {
    this.data.x = value;
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectSetX,

      value: new _ObjectTypespaceObjectSetXRequest({
        replyId,
        timestamp,
        previousValue: this.data.x,
        newValue: value,
      })
    }));
  }

  getY() {
    return this.data.y;
  }

  setY(session: VossSession, value: number): Promise<void> {
    this.data.y = value;
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectSetY,

      value: new _ObjectTypespaceObjectSetYRequest({
        replyId,
        timestamp,
        previousValue: this.data.y,
        newValue: value,
      })
    }));
  }

  updateInternal(patch: Partial<TypespaceObject$Data>): void {
    this.data = {...this.data, ...patch};
    this.emitChange();
  }

  serialize(builder: Builder) {
    builder.uuid(0, this.data.uuid);
    builder.str(16, this.data.title);
    builder.i32(24, this.data.x);
    builder.i32(28, this.data.y);
  }

  static deserialize(reader: Reader) {
    return new TypespaceObject({
        uuid: reader.uuid(0),
        title: reader.str(16),
        x: reader.i32(24),
        y: reader.i32(28),
    });
  }
}

export interface FieldTypeObjectReference$Data {
  obj: UUID,
}

export class FieldTypeObjectReference implements Struct {
  readonly maxElementAlignment = 1;
  readonly size = 16;

  constructor(private data: FieldTypeObjectReference$Data) {
  }

  fetchObj(session: VossSession): Promise<TypespaceObject | undefined> {
    return session.fetchObjectByUUID(this.data.obj);
  }

  setObj(value: TypespaceObject): FieldTypeObjectReference {
    return new FieldTypeObjectReference({...this.data, obj: value.getUuid()});
  }

  serialize(builder: Builder) {
    builder.uuid(0, this.data.obj);
  }

  static deserialize(reader: Reader) {
    return new FieldTypeObjectReference({
        obj: reader.uuid(0),
    });
  }
}

export interface TypespaceObjectField$Data {
  uuid: UUID,
  title: string,
  owner: UUID,
  fieldType: FieldType,
}

export class TypespaceObjectField extends IChangeNotifier implements Struct, ChangeNotifier {
  readonly maxElementAlignment = 4;
  readonly size = 48;

  constructor(private data: TypespaceObjectField$Data) {
    super();
  }

  getUuid() {
    return this.data.uuid;
  }

  getTitle() {
    return this.data.title;
  }

  setTitle(session: VossSession, value: string): Promise<void> {
    this.data.title = value;
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectFieldSetTitle,

      value: new _ObjectTypespaceObjectFieldSetTitleRequest({
        replyId,
        timestamp,
        previousValue: this.data.title,
        newValue: value,
      })
    }));
  }

  fetchOwner(session: VossSession): Promise<TypespaceObject | undefined> {
    return session.fetchObjectByUUID(this.data.owner);
  }

  setOwner(session: VossSession, value: TypespaceObject): Promise<void> {
    this.data.owner = value.getUuid();
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectFieldSetOwner,

      value: new _ObjectTypespaceObjectFieldSetOwnerRequest({
        replyId,
        timestamp,
        previousValue: this.data.owner,
        newValue: value.getUuid(),
      })
    }));
  }

  getFieldType() {
    return this.data.fieldType;
  }

  setFieldType(session: VossSession, value: FieldType): Promise<void> {
    this.data.fieldType = value;
    this.emitChange();

    return session.sendRequest((replyId, timestamp) => ({
      type: _RPCMessage$Type.ObjectTypespaceObjectFieldSetFieldType,

      value: new _ObjectTypespaceObjectFieldSetFieldTypeRequest({
        replyId,
        timestamp,
        previousValue: this.data.fieldType,
        newValue: value,
      })
    }));
  }

  updateInternal(patch: Partial<TypespaceObjectField$Data>): void {
    this.data = {...this.data, ...patch};
    this.emitChange();
  }

  serialize(builder: Builder) {
    builder.uuid(0, this.data.uuid);
    builder.str(16, this.data.title);
    builder.uuid(24, this.data.owner);
    builder.enum(40, this.data.fieldType);
  }

  static deserialize(reader: Reader) {
    return new TypespaceObjectField({
        uuid: reader.uuid(0),
        title: reader.str(16),
        owner: reader.uuid(24),
        fieldType: reader.enum(40, FieldType$DeserializerMap),
    });
  }
}

export interface _ClockData$Data {
  timestamp: number,
}

export class _ClockData implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 8;

  constructor(private data: _ClockData$Data) {
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ClockData {
    return new _ClockData({...this.data, timestamp: value});
  }

  serialize(builder: Builder) {
    builder.f64(0, this.data.timestamp);
  }

  static deserialize(reader: Reader) {
    return new _ClockData({
        timestamp: reader.f64(0),
    });
  }
}

export interface _ReplyData$Data {
  replyId: number,
}

export class _ReplyData implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 4;

  constructor(private data: _ReplyData$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ReplyData {
    return new _ReplyData({...this.data, replyId: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
  }

  static deserialize(reader: Reader) {
    return new _ReplyData({
        replyId: reader.u32(0),
    });
  }
}

export interface _ObjectDeleteRequest$Data {
  replyId: number,
  timestamp: number,
  uuid: UUID,
}

export class _ObjectDeleteRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectDeleteRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectDeleteRequest {
    return new _ObjectDeleteRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectDeleteRequest {
    return new _ObjectDeleteRequest({...this.data, timestamp: value});
  }

  getUuid() {
    return this.data.uuid;
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.uuid(16, this.data.uuid);
  }

  static deserialize(reader: Reader) {
    return new _ObjectDeleteRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        uuid: reader.uuid(16),
    });
  }
}

export interface _FetchByUUIDRequest$Data {
  replyId: number,
  uuid: UUID,
}

export class _FetchByUUIDRequest implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 20;

  constructor(private data: _FetchByUUIDRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _FetchByUUIDRequest {
    return new _FetchByUUIDRequest({...this.data, replyId: value});
  }

  getUuid() {
    return this.data.uuid;
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.uuid(4, this.data.uuid);
  }

  static deserialize(reader: Reader) {
    return new _FetchByUUIDRequest({
        replyId: reader.u32(0),
        uuid: reader.uuid(4),
    });
  }
}

export interface _ObjectTypespaceObjectCreateRequest$Data {
  replyId: number,
  timestamp: number,
  data: UUID,
}

export class _ObjectTypespaceObjectCreateRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectTypespaceObjectCreateRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectCreateRequest {
    return new _ObjectTypespaceObjectCreateRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectCreateRequest {
    return new _ObjectTypespaceObjectCreateRequest({...this.data, timestamp: value});
  }

  fetchData(session: VossSession): Promise<TypespaceObject | undefined> {
    return session.fetchObjectByUUID(this.data.data);
  }

  setData(value: TypespaceObject): _ObjectTypespaceObjectCreateRequest {
    return new _ObjectTypespaceObjectCreateRequest({...this.data, data: value.getUuid()});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.uuid(16, this.data.data);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectCreateRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        data: reader.uuid(16),
    });
  }
}

export interface _RootFetchTypespaceObjectRequest$Data {
  replyId: number,
}

export class _RootFetchTypespaceObjectRequest implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 4;

  constructor(private data: _RootFetchTypespaceObjectRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _RootFetchTypespaceObjectRequest {
    return new _RootFetchTypespaceObjectRequest({...this.data, replyId: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
  }

  static deserialize(reader: Reader) {
    return new _RootFetchTypespaceObjectRequest({
        replyId: reader.u32(0),
    });
  }
}

export interface _ObjectTypespaceObjectSetTitleRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: string,
  newValue: string,
}

export class _ObjectTypespaceObjectSetTitleRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectTypespaceObjectSetTitleRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectSetTitleRequest {
    return new _ObjectTypespaceObjectSetTitleRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectSetTitleRequest {
    return new _ObjectTypespaceObjectSetTitleRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: string): _ObjectTypespaceObjectSetTitleRequest {
    return new _ObjectTypespaceObjectSetTitleRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: string): _ObjectTypespaceObjectSetTitleRequest {
    return new _ObjectTypespaceObjectSetTitleRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.str(16, this.data.previousValue);
    builder.str(24, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectSetTitleRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.str(16),
        newValue: reader.str(24),
    });
  }
}

export interface _ObjectTypespaceObjectSetXRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: number,
  newValue: number,
}

export class _ObjectTypespaceObjectSetXRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 24;

  constructor(private data: _ObjectTypespaceObjectSetXRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectSetXRequest {
    return new _ObjectTypespaceObjectSetXRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectSetXRequest {
    return new _ObjectTypespaceObjectSetXRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: number): _ObjectTypespaceObjectSetXRequest {
    return new _ObjectTypespaceObjectSetXRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: number): _ObjectTypespaceObjectSetXRequest {
    return new _ObjectTypespaceObjectSetXRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.i32(16, this.data.previousValue);
    builder.i32(20, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectSetXRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.i32(16),
        newValue: reader.i32(20),
    });
  }
}

export interface _ObjectTypespaceObjectSetYRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: number,
  newValue: number,
}

export class _ObjectTypespaceObjectSetYRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 24;

  constructor(private data: _ObjectTypespaceObjectSetYRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectSetYRequest {
    return new _ObjectTypespaceObjectSetYRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectSetYRequest {
    return new _ObjectTypespaceObjectSetYRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: number): _ObjectTypespaceObjectSetYRequest {
    return new _ObjectTypespaceObjectSetYRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: number): _ObjectTypespaceObjectSetYRequest {
    return new _ObjectTypespaceObjectSetYRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.i32(16, this.data.previousValue);
    builder.i32(20, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectSetYRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.i32(16),
        newValue: reader.i32(20),
    });
  }
}

export interface _ObjectTypespaceObjectFieldCreateRequest$Data {
  replyId: number,
  timestamp: number,
  data: UUID,
}

export class _ObjectTypespaceObjectFieldCreateRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectTypespaceObjectFieldCreateRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectFieldCreateRequest {
    return new _ObjectTypespaceObjectFieldCreateRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectFieldCreateRequest {
    return new _ObjectTypespaceObjectFieldCreateRequest({...this.data, timestamp: value});
  }

  fetchData(session: VossSession): Promise<TypespaceObjectField | undefined> {
    return session.fetchObjectByUUID(this.data.data);
  }

  setData(value: TypespaceObjectField): _ObjectTypespaceObjectFieldCreateRequest {
    return new _ObjectTypespaceObjectFieldCreateRequest({...this.data, data: value.getUuid()});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.uuid(16, this.data.data);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectFieldCreateRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        data: reader.uuid(16),
    });
  }
}

export interface _RootFetchTypespaceObjectFieldRequest$Data {
  replyId: number,
}

export class _RootFetchTypespaceObjectFieldRequest implements Struct {
  readonly maxElementAlignment = 4;
  readonly size = 4;

  constructor(private data: _RootFetchTypespaceObjectFieldRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _RootFetchTypespaceObjectFieldRequest {
    return new _RootFetchTypespaceObjectFieldRequest({...this.data, replyId: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
  }

  static deserialize(reader: Reader) {
    return new _RootFetchTypespaceObjectFieldRequest({
        replyId: reader.u32(0),
    });
  }
}

export interface _ObjectTypespaceObjectFieldSetTitleRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: string,
  newValue: string,
}

export class _ObjectTypespaceObjectFieldSetTitleRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectTypespaceObjectFieldSetTitleRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectFieldSetTitleRequest {
    return new _ObjectTypespaceObjectFieldSetTitleRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectFieldSetTitleRequest {
    return new _ObjectTypespaceObjectFieldSetTitleRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: string): _ObjectTypespaceObjectFieldSetTitleRequest {
    return new _ObjectTypespaceObjectFieldSetTitleRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: string): _ObjectTypespaceObjectFieldSetTitleRequest {
    return new _ObjectTypespaceObjectFieldSetTitleRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.str(16, this.data.previousValue);
    builder.str(24, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectFieldSetTitleRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.str(16),
        newValue: reader.str(24),
    });
  }
}

export interface _ObjectTypespaceObjectFieldSetOwnerRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: UUID,
  newValue: UUID,
}

export class _ObjectTypespaceObjectFieldSetOwnerRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 48;

  constructor(private data: _ObjectTypespaceObjectFieldSetOwnerRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectFieldSetOwnerRequest {
    return new _ObjectTypespaceObjectFieldSetOwnerRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectFieldSetOwnerRequest {
    return new _ObjectTypespaceObjectFieldSetOwnerRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: UUID): _ObjectTypespaceObjectFieldSetOwnerRequest {
    return new _ObjectTypespaceObjectFieldSetOwnerRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: UUID): _ObjectTypespaceObjectFieldSetOwnerRequest {
    return new _ObjectTypespaceObjectFieldSetOwnerRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.uuid(16, this.data.previousValue);
    builder.uuid(32, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectFieldSetOwnerRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.uuid(16),
        newValue: reader.uuid(32),
    });
  }
}

export interface _ObjectTypespaceObjectFieldSetFieldTypeRequest$Data {
  replyId: number,
  timestamp: number,
  previousValue: FieldType,
  newValue: FieldType,
}

export class _ObjectTypespaceObjectFieldSetFieldTypeRequest implements Struct {
  readonly maxElementAlignment = 8;
  readonly size = 32;

  constructor(private data: _ObjectTypespaceObjectFieldSetFieldTypeRequest$Data) {
  }

  getReplyId() {
    return this.data.replyId;
  }

  setReplyId(value: number): _ObjectTypespaceObjectFieldSetFieldTypeRequest {
    return new _ObjectTypespaceObjectFieldSetFieldTypeRequest({...this.data, replyId: value});
  }

  getTimestamp() {
    return this.data.timestamp;
  }

  setTimestamp(value: number): _ObjectTypespaceObjectFieldSetFieldTypeRequest {
    return new _ObjectTypespaceObjectFieldSetFieldTypeRequest({...this.data, timestamp: value});
  }

  getPreviousValue() {
    return this.data.previousValue;
  }

  setPreviousValue(value: FieldType): _ObjectTypespaceObjectFieldSetFieldTypeRequest {
    return new _ObjectTypespaceObjectFieldSetFieldTypeRequest({...this.data, previousValue: value});
  }

  getNewValue() {
    return this.data.newValue;
  }

  setNewValue(value: FieldType): _ObjectTypespaceObjectFieldSetFieldTypeRequest {
    return new _ObjectTypespaceObjectFieldSetFieldTypeRequest({...this.data, newValue: value});
  }

  serialize(builder: Builder) {
    builder.u32(0, this.data.replyId);
    builder.f64(8, this.data.timestamp);
    builder.enum(16, this.data.previousValue);
    builder.enum(24, this.data.newValue);
  }

  static deserialize(reader: Reader) {
    return new _ObjectTypespaceObjectFieldSetFieldTypeRequest({
        replyId: reader.u32(0),
        timestamp: reader.f64(8),
        previousValue: reader.enum(16, FieldType$DeserializerMap),
        newValue: reader.enum(24, FieldType$DeserializerMap),
    });
  }
}

export const enum FieldType$Type {
  FieldTypeObjectReference = 0,
  FieldTypePrimitive = 1,
}
export type FieldType =
  | EnumCase<FieldType$Type.FieldTypeObjectReference, FieldTypeObjectReference>
  | EnumCase<FieldType$Type.FieldTypePrimitive, FieldTypePrimitive>
  ;

export const FieldType$DeserializerMap: Record<FieldType$Type, DeserializeFn<any>> = {
  [FieldType$Type.FieldTypeObjectReference]: FieldTypeObjectReference.deserialize,
  [FieldType$Type.FieldTypePrimitive]: FieldTypePrimitive.deserialize,
}

export const enum _RPCMessage$Type {
  Clock = 0,
  Reply = 1,
  ObjectDelete = 6,
  FetchByUUID = 7,
  ObjectTypespaceObjectCreate = 8453,
  RootFetchTypespaceObject = 8450,
  ObjectTypespaceObjectSetTitle = 8452,
  ObjectTypespaceObjectSetX = 16785668,
  ObjectTypespaceObjectSetY = 33562884,
  ObjectTypespaceObjectFieldCreate = 8709,
  RootFetchTypespaceObjectField = 8706,
  ObjectTypespaceObjectFieldSetTitle = 8708,
  ObjectTypespaceObjectFieldSetOwner = 16785924,
  ObjectTypespaceObjectFieldSetFieldType = 33563140,
}
export type _RPCMessage =
  | EnumCase<_RPCMessage$Type.Clock, _ClockData>
  | EnumCase<_RPCMessage$Type.Reply, _ReplyData>
  | EnumCase<_RPCMessage$Type.ObjectDelete, _ObjectDeleteRequest>
  | EnumCase<_RPCMessage$Type.FetchByUUID, _FetchByUUIDRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectCreate, _ObjectTypespaceObjectCreateRequest>
  | EnumCase<_RPCMessage$Type.RootFetchTypespaceObject, _RootFetchTypespaceObjectRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectSetTitle, _ObjectTypespaceObjectSetTitleRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectSetX, _ObjectTypespaceObjectSetXRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectSetY, _ObjectTypespaceObjectSetYRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectFieldCreate, _ObjectTypespaceObjectFieldCreateRequest>
  | EnumCase<_RPCMessage$Type.RootFetchTypespaceObjectField, _RootFetchTypespaceObjectFieldRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectFieldSetTitle, _ObjectTypespaceObjectFieldSetTitleRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectFieldSetOwner, _ObjectTypespaceObjectFieldSetOwnerRequest>
  | EnumCase<_RPCMessage$Type.ObjectTypespaceObjectFieldSetFieldType, _ObjectTypespaceObjectFieldSetFieldTypeRequest>
  ;

export const _RPCMessage$DeserializerMap: Record<_RPCMessage$Type, DeserializeFn<any>> = {
  [_RPCMessage$Type.Clock]: _ClockData.deserialize,
  [_RPCMessage$Type.Reply]: _ReplyData.deserialize,
  [_RPCMessage$Type.ObjectDelete]: _ObjectDeleteRequest.deserialize,
  [_RPCMessage$Type.FetchByUUID]: _FetchByUUIDRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectCreate]: _ObjectTypespaceObjectCreateRequest.deserialize,
  [_RPCMessage$Type.RootFetchTypespaceObject]: _RootFetchTypespaceObjectRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectSetTitle]: _ObjectTypespaceObjectSetTitleRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectSetX]: _ObjectTypespaceObjectSetXRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectSetY]: _ObjectTypespaceObjectSetYRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectFieldCreate]: _ObjectTypespaceObjectFieldCreateRequest.deserialize,
  [_RPCMessage$Type.RootFetchTypespaceObjectField]: _RootFetchTypespaceObjectFieldRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectFieldSetTitle]: _ObjectTypespaceObjectFieldSetTitleRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectFieldSetOwner]: _ObjectTypespaceObjectFieldSetOwnerRequest.deserialize,
  [_RPCMessage$Type.ObjectTypespaceObjectFieldSetFieldType]: _ObjectTypespaceObjectFieldSetFieldTypeRequest.deserialize,
}

export class VossSession extends VossSessionBase<_RPCMessage> {
  protected objects = new Map<string, Struct>();
  protected deserializeMap = _RPCMessage$DeserializerMap;

  async fetchObjectByUUID(uuid: string): Promise<any> {
    if (this.objects.has(uuid)) {
      return this.objects.get(uuid);
    }

    await this.sendRequest((replyId) => ({
      type: _RPCMessage$Type.FetchByUUID,
      value: new _FetchByUUIDRequest({ replyId, uuid }),
    }));

    return this.objects.get(uuid);
  }

  protected createClockRequest(timestamp: number): _RPCMessage {
    return {
      type: _RPCMessage$Type.Clock,
      value: new _ClockData({ timestamp }),
    };
  }

  protected onMessage(message: _RPCMessage): void {
    if (message.type === _RPCMessage$Type.Reply) {
      this.receivedReply(message.value.getReplyId());
      return;
    }

    if (message.type === _RPCMessage$Type.Clock) {
      this.receivedTime(message.value.getTimestamp());
      return;
    }
  }
}