// VOSS AUTOGENERATED FILE, DO NOT MODIFY.

import {
  Builder,
  DeserializeFn,
  EnumCase,
  Reader,
  Struct,
  IBuilder,
  IReader
} from './runtime';
type UUID = string;

export class Person implements Struct {
  readonly _maxElementAlignment = 4;
  readonly _size = 8;
  constructor(
    readonly $session: VossSession,
    private __name: string,
  ) {}

  get name() {
    return this.__name;
  }

  _serialize(builder: Builder) {
    builder.str(0, this.__name);
  }

  static deserialize(session: VossSession, reader: Reader) {
    return new Person(
      session,
      reader.str(0),
    );
  }
}

export class Point3D implements Struct {
  readonly _maxElementAlignment = 8;
  readonly _size = 24;
  constructor(
    readonly $session: VossSession,
    private __x: number,
    private __y: number,
    private __z: number,
  ) {}

  get x() {
    return this.__x;
  }

  get y() {
    return this.__y;
  }

  get z() {
    return this.__z;
  }

  _serialize(builder: Builder) {
    builder.f64(0, this.__x);
    builder.f64(8, this.__y);
    builder.f64(16, this.__z);
  }

  static deserialize(session: VossSession, reader: Reader) {
    return new Point3D(
      session,
      reader.f64(0),
      reader.f64(8),
      reader.f64(16),
    );
  }
}

export class Point2D implements Struct {
  readonly _maxElementAlignment = 8;
  readonly _size = 16;
  constructor(
    readonly $session: VossSession,
    private __x: number,
    private __y: number,
  ) {}

  get x() {
    return this.__x;
  }

  get y() {
    return this.__y;
  }

  _serialize(builder: Builder) {
    builder.f64(0, this.__x);
    builder.f64(8, this.__y);
  }

  static deserialize(session: VossSession, reader: Reader) {
    return new Point2D(
      session,
      reader.f64(0),
      reader.f64(8),
    );
  }
}

export class _ClockData implements Struct {
  readonly _maxElementAlignment = 8;
  readonly _size = 8;
  constructor(
    readonly $session: VossSession,
    private __timestamp: number,
  ) {}

  get timestamp() {
    return this.__timestamp;
  }

  _serialize(builder: Builder) {
    builder.f64(0, this.__timestamp);
  }

  static deserialize(session: VossSession, reader: Reader) {
    return new _ClockData(
      session,
      reader.f64(0),
    );
  }
}

export class _ReplyData implements Struct {
  readonly _maxElementAlignment = 4;
  readonly _size = 4;
  constructor(
    readonly $session: VossSession,
    private __replyId: number,
  ) {}

  get replyId() {
    return this.__replyId;
  }

  _serialize(builder: Builder) {
    builder.u32(0, this.__replyId);
  }

  static deserialize(session: VossSession, reader: Reader) {
    return new _ReplyData(
      session,
      reader.u32(0),
    );
  }
}

export enum Point$Type {
  Point2D = 0,
  Point3D = 1,
}

export type Point =
  | EnumCase<Point$Type.Point2D, Point2D>
  | EnumCase<Point$Type.Point3D, Point3D>
  ;

export const Point$DeserializerMap: Record<Point$Type, DeserializeFn<any>> = {
  [Point$Type.Point2D]: Point2D.deserialize,
  [Point$Type.Point3D]: Point3D.deserialize,
}

export enum _RPCMessage$Type {
  Clock = 0,
  Reply = 1,
}

export type _RPCMessage =
  | EnumCase<_RPCMessage$Type.Clock, _ClockData>
  | EnumCase<_RPCMessage$Type.Reply, _ReplyData>
  ;

export const _RPCMessage$DeserializerMap: Record<_RPCMessage$Type, DeserializeFn<any>> = {
  [_RPCMessage$Type.Clock]: _ClockData.deserialize,
  [_RPCMessage$Type.Reply]: _ReplyData.deserialize,
}

class VossSession {}

const session = new VossSession();
const person = new Person(session, 'Hello World')
const buffer = IBuilder.SerializeStruct(person);
console.log(buffer);

const decoded = IReader.DeserializeStruct(session, buffer.buffer, Person.deserialize);
console.log(decoded.name);